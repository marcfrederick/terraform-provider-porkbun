# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: latest

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      # We need the latest version of Terraform for our documentation generation to use
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_wrapper: false
      - run: make generate
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'make generate' command and commit."; exit 1)

    # Run acceptance tests in a matrix with Terraform and OpenTofu CLI versions
  test:
    name: Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        include:
          - engine: terraform
            version: '1.11.*'
          - engine: terraform
            version: '1.12.*'
          - engine: opentofu
            version: '1.8.*'
          - engine: opentofu
            version: '1.9.*'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Setup Terraform
        if: matrix.engine == 'terraform'
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.version }}
          terraform_wrapper: false
      - name: Setup OpenTofu
        if: matrix.engine == 'opentofu'
        uses: opentofu/setup-opentofu@592200bd4b9bbf4772ace78f887668b1aee8f716 # v1.0.5
        with:
          tofu_version: ${{ matrix.version }}
          tofu_wrapper: false
      - run: go mod download
      - name: Run unit tests (non-main branches)
        if: github.ref != 'refs/heads/main'
        run: go test -v -cover ./internal/provider/
      - name: Run unit and acceptance tests (main branch only)
        if: github.ref == 'refs/heads/main'
        env:
          TF_ACC: "1"
          PORKBUN_API_KEY: ${{ secrets.PORKBUN_API_KEY }}
          PORKBUN_SECRET_API_KEY: ${{ secrets.PORKBUN_SECRET_API_KEY }}
          PORKBUN_ACCTEST_DOMAIN: ${{ secrets.PORKBUN_ACCTEST_DOMAIN }}
        run: |
          if [[ "${{ matrix.engine }}" == "opentofu" ]]; then
            export TF_ACC_TERRAFORM_PATH="$(command -v tofu)"
            export TF_ACC_PROVIDER_NAMESPACE="hashicorp"
            export TF_ACC_PROVIDER_HOST="registry.opentofu.org"
          fi
          go test -v -cover ./internal/provider/
        timeout-minutes: 10
